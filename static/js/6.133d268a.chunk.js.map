{"version":3,"sources":["components/OversizedPanel/index.js","assets/images/arrow-down-blue.svg","assets/images/arrow-down-grey.svg","webpack:///./src/assets/images/dropup-blue.svg?5b09","webpack:///./src/assets/images/dropdown-blue.svg?f8bc","components/ContextualInfoNew/index.js","pages/Swap/index.js"],"names":["Panel","styled","div","_templateObject","_ref","theme","concreteGray","PanelTop","_templateObject2","_ref2","PanelBottom","_templateObject3","_ref3","OversizedPanel","_ref4","hideTop","hideBottom","children","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","module","exports","__webpack_require__","p","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","react_default","d","stroke","dropup_blue_SvgDropupBlue","svgRef","props","width","height","viewBox","fill","ref","ForwardRef","forwardRef","dropdown_blue_extends","dropdown_blue_objectWithoutProperties","dropdown_blue_objectWithoutPropertiesLoose","dropdown_blue_ref2","dropdown_blue_SvgDropdownBlue","dropdown_blue_ForwardRef","SummaryWrapper","error","salmonRed","doveGray","SummaryWrapperContainer","flexRowNoWrap","royalBlue","Details","ErrorSpan","span","_templateObject4","_ref5","isError","_ref6","slippageWarning","highSlippageWarning","css","_templateObject5","_templateObject6","transparentize","warningYellow","ColoredDropup","_ref7","rest","objectWithoutProperties","_templateObject7","_ref8","_ref9","_templateObject8","ColoredDropdown","_ref10","_templateObject9","_ref11","_ref12","_templateObject10","ContextualInfo","_ref13","_ref13$openDetailsTex","openDetailsText","_ref13$closeDetailsTe","closeDetailsText","_ref13$contextualInfo","contextualInfo","_ref13$allowExpand","allowExpand","_ref13$renderTransact","renderTransactionDetails","_ref13$isError","_useState","useState","_useState2","slicedToArray","showDetails","setShowDetails","Fragment","onClick","s","role","aria-label","INPUT","OUTPUT","ETH_TO_TOKEN","TOKEN_TO_ETH","TOKEN_TO_TOKEN","ALLOWED_SLIPPAGE","ethers","utils","bigNumberify","TOKEN_ALLOWED_SLIPPAGE","DEADLINE_FROM_NOW","GAS_MARGIN","BlueSpan","LastSummaryText","DownArrowBackground","DownArrow","img","clickable","ExchangeRateWrapper","ExchangeRate","chaliceGray","Flex","calculateEtherTokenOutputFromInput","inputAmount","inputReserve","outputReserve","inputAmountWithFee","mul","numerator","denominator","add","calculateEtherTokenInputFromOutput","outputAmount","sub","constants","One","initialSwapState","independentValue","dependentValue","independentField","inputCurrency","outputCurrency","swapStateReducer","state","action","type","_mnt_c_Code_uniswap_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_4__","_action$payload","payload","field","currency","newInputCurrency","newOutputCurrency","_action$payload2","value","getExchangeRate","inputValue","inputDecimals","outputValue","outputDecimals","invert","undefined","factor","pow","_unused","Swap","t","useTranslation","account","useWeb3Context","addTransaction","useTransactionAdder","useEffect","ReactGA","pageview","window","location","pathname","search","_useReducer","useReducer","_useReducer2","_mnt_c_Code_uniswap_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","swapState","dispatchSwapState","swapType","getSwapType","_useTokenDetails","useTokenDetails","inputSymbol","symbol","decimals","inputExchangeAddress","exchangeAddress","_useTokenDetails2","outputSymbol","outputExchangeAddress","inputExchangeContract","useExchangeContract","outputExchangeContract","contract","inputAllowance","useAddressAllowance","_useExchangeReserves","useExchangeReserves","inputReserveETH","reserveETH","inputReserveToken","reserveToken","_useExchangeReserves2","outputReserveETH","outputReserveToken","inputBalance","useAddressBalance","outputBalance","inputBalanceFormatted","Number","isInteger","amountFormatter","Math","min","outputBalanceFormatted","independentDecimals","dependentDecimals","independentValueParsed","setIndependentValueParsed","dependentValueFormatted","inputValueParsed","inputValueFormatted","outputValueParsed","outputValueFormatted","_useState3","_useState4","independentError","setIndependentError","parsedValue","parseUnits","lte","Zero","gte","MaxUint256","Error","_unused3","_calculateSlippageBou","token","offset","minimum","maximum","lt","gt","calculateSlippageBounds","dependentValueMinumum","dependentValueMaximum","_useState5","_useState6","inputError","setInputError","_useState7","_useState8","showUnlock","setShowUnlock","inputValueCalculation","amount","calculatedDependentValue","_unused4","_unused5","reserveETHFirst","reserveTokenFirst","reserveETHSecond","reserveTokenSecond","intermediateValue","_unused6","_useState9","_useState10","inverted","setInverted","exchangeRate","exchangeRateInverted","marketRate","firstRate","secondRate","_unused2","getMarketRate","percentSlippage","abs","percentSlippageFormatted","parseEther","isValid","estimatedText","concat","formatBalance","event","category","b","text","react__WEBPACK_IMPORTED_MODULE_6___default","_onSwap","_mnt_c_Code_uniswap_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_mnt_c_Code_uniswap_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","deadline","estimate","method","args","estimatedGasLimit","wrap","_context","prev","next","ceil","Date","now","ethToTokenSwapInput","tokenToEthSwapInput","tokenToTokenSwapInput","ethToTokenSwapOutput","tokenToEthSwapOutput","tokenToTokenSwapOutput","_mnt_c_Code_uniswap_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","sent","gasLimit","calculateGasMargin","then","response","stop","_components_CurrencyInputPanel__WEBPACK_IMPORTED_MODULE_13__","title","description","extraText","extraTextClickHander","valueToSet","onCurrencySelected","onValueChange","selectedTokens","selectedTokenAddress","errorMessage","_components_OversizedPanel__WEBPACK_IMPORTED_MODULE_15__","alt","src","ArrowDownBlue","ArrowDownGrey","disableUnlock","slippageWarningText","_components_ContextualInfoNew__WEBPACK_IMPORTED_MODULE_14__","renderSummary","_theme__WEBPACK_IMPORTED_MODULE_12__","disabled","warning"],"mappings":"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","file":"static/js/6.133d268a.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Panel = styled.div`\r\n  position: relative;\r\n  background-color: ${({ theme }) => theme.concreteGray};\r\n  width: calc(100% - 1rem);\r\n  margin: 0 auto;\r\n  border-radius: 0.625rem;\r\n`\r\n\r\nconst PanelTop = styled.div`\r\n  content: '';\r\n  position: absolute;\r\n  top: -0.5rem;\r\n  left: 0;\r\n  height: 1rem;\r\n  width: 100%;\r\n  background-color: ${({ theme }) => theme.concreteGray};\r\n`\r\n\r\nconst PanelBottom = styled.div`\r\n  position: absolute;\r\n  top: 80%;\r\n  left: 0;\r\n  height: 1rem;\r\n  width: 100%;\r\n  background-color: ${({ theme }) => theme.concreteGray};\r\n`\r\n\r\nexport default function OversizedPanel({ hideTop, hideBottom, children }) {\r\n  return (\r\n    <Panel>\r\n      {hideTop || <PanelTop />}\r\n      {children}\r\n      {hideBottom || <PanelBottom />}\r\n    </Panel>\r\n  )\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/arrow-down-blue.114fab91.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-down-grey.4d4a6a99.svg\";","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M11.4673 6L6.23364 1L0.999995 6\",\n  stroke: \"#388DFF\"\n});\n\nvar SvgDropupBlue = function SvgDropupBlue(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 7,\n    viewBox: \"0 0 12 7\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgDropupBlue, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/dropup-blue.345dad74.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M0.97168 1L6.20532 6L11.439 1\",\n  stroke: \"#2F80ED\"\n});\n\nvar SvgDropdownBlue = function SvgDropdownBlue(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 7,\n    viewBox: \"0 0 12 7\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgDropdownBlue, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/dropdown-blue.80a3ae25.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { transparentize } from 'polished'\r\n\r\nimport { ReactComponent as Dropup } from '../../assets/images/dropup-blue.svg'\r\nimport { ReactComponent as Dropdown } from '../../assets/images/dropdown-blue.svg'\r\n\r\nconst SummaryWrapper = styled.div`\r\n  color: ${({ error, theme }) => (error ? theme.salmonRed : theme.doveGray)};\r\n  font-size: 0.75rem;\r\n  text-align: center;\r\n  margin-top: 1rem;\r\n  padding-top: 1rem;\r\n`\r\n\r\nconst SummaryWrapperContainer = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap};\r\n  color: ${({ theme }) => theme.royalBlue};\r\n  text-align: center;\r\n  margin-top: 1rem;\r\n  padding-top: 1rem;\r\n  cursor: pointer;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 0.75rem;\r\n\r\n  img {\r\n    height: 0.75rem;\r\n    width: 0.75rem;\r\n  }\r\n`\r\n\r\nconst Details = styled.div`\r\n  background-color: ${({ theme }) => theme.concreteGray};\r\n  padding: 1.5rem;\r\n  border-radius: 1rem;\r\n  font-size: 0.75rem;\r\n  margin-top: 1rem;\r\n`\r\n\r\nconst ErrorSpan = styled.span`\r\n  margin-right: 12px;\r\n  font-size: 0.75rem;\r\n  line-height: 0.75rem;\r\n\r\n  color: ${({ isError, theme }) => isError && theme.salmonRed};\r\n  ${({ slippageWarning, highSlippageWarning, theme }) =>\r\n    highSlippageWarning\r\n      ? css`\r\n          color: ${theme.salmonRed};\r\n          font-weight: 600;\r\n        `\r\n      : slippageWarning &&\r\n        css`\r\n          background-color: ${transparentize(0.6, theme.warningYellow)};\r\n          font-weight: 600;\r\n          padding: 0.25rem;\r\n        `}\r\n`\r\n\r\nconst WrappedDropup = ({ isError, highSlippageWarning, ...rest }) => <Dropup {...rest} />\r\nconst ColoredDropup = styled(WrappedDropup)`\r\n  path {\r\n    stroke: ${({ isError, theme }) => isError && theme.salmonRed};\r\n\r\n    ${({ highSlippageWarning, theme }) =>\r\n      highSlippageWarning &&\r\n      css`\r\n        stroke: ${theme.salmonRed};\r\n      `}\r\n  }\r\n`\r\n\r\nconst WrappedDropdown = ({ isError, highSlippageWarning, ...rest }) => <Dropdown {...rest} />\r\nconst ColoredDropdown = styled(WrappedDropdown)`\r\n  path {\r\n    stroke: ${({ isError, theme }) => isError && theme.salmonRed};\r\n\r\n    ${({ highSlippageWarning, theme }) =>\r\n      highSlippageWarning &&\r\n      css`\r\n        stroke: ${theme.salmonRed};\r\n      `}\r\n  }\r\n`\r\n\r\nexport default function ContextualInfo({\r\n  openDetailsText = 'Transaction Details',\r\n  closeDetailsText = 'Hide Details',\r\n  contextualInfo = '',\r\n  allowExpand = false,\r\n  renderTransactionDetails = () => {},\r\n  isError = false,\r\n  slippageWarning,\r\n  highSlippageWarning\r\n}) {\r\n  const [showDetails, setShowDetails] = useState(false)\r\n\r\n  return !allowExpand ? (\r\n    <SummaryWrapper>{contextualInfo}</SummaryWrapper>\r\n  ) : (\r\n    <>\r\n      <SummaryWrapperContainer onClick={() => setShowDetails(s => !s)}>\r\n        <>\r\n          <ErrorSpan isError={isError} slippageWarning={slippageWarning} highSlippageWarning={highSlippageWarning}>\r\n            {(slippageWarning || highSlippageWarning) && (\r\n              <span role=\"img\" aria-label=\"warning\">\r\n                ⚠️\r\n              </span>\r\n            )}\r\n            {contextualInfo ? contextualInfo : showDetails ? closeDetailsText : openDetailsText}\r\n          </ErrorSpan>\r\n          {showDetails ? (\r\n            <ColoredDropup isError={isError} highSlippageWarning={highSlippageWarning} />\r\n          ) : (\r\n            <ColoredDropdown isError={isError} highSlippageWarning={highSlippageWarning} />\r\n          )}\r\n        </>\r\n      </SummaryWrapperContainer>\r\n      {showDetails && <Details>{renderTransactionDetails()}</Details>}\r\n    </>\r\n  )\r\n}\r\n","import React, { useState, useReducer, useEffect } from 'react'\r\nimport ReactGA from 'react-ga'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { useWeb3Context } from 'web3-react'\r\nimport { ethers } from 'ethers'\r\nimport styled from 'styled-components'\r\n\r\nimport { Button } from '../../theme'\r\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\r\nimport NewContextualInfo from '../../components/ContextualInfoNew'\r\nimport OversizedPanel from '../../components/OversizedPanel'\r\nimport ArrowDownBlue from '../../assets/images/arrow-down-blue.svg'\r\nimport ArrowDownGrey from '../../assets/images/arrow-down-grey.svg'\r\nimport { amountFormatter, calculateGasMargin } from '../../utils'\r\nimport { useExchangeContract } from '../../hooks'\r\nimport { useTokenDetails } from '../../contexts/Tokens'\r\nimport { useTransactionAdder } from '../../contexts/Transactions'\r\nimport { useAddressBalance, useExchangeReserves } from '../../contexts/Balances'\r\nimport { useAddressAllowance } from '../../contexts/Allowances'\r\n\r\nconst INPUT = 0\r\nconst OUTPUT = 1\r\n\r\nconst ETH_TO_TOKEN = 0\r\nconst TOKEN_TO_ETH = 1\r\nconst TOKEN_TO_TOKEN = 2\r\n\r\n// denominated in bips\r\nconst ALLOWED_SLIPPAGE = ethers.utils.bigNumberify(200)\r\nconst TOKEN_ALLOWED_SLIPPAGE = ethers.utils.bigNumberify(400)\r\n\r\n// denominated in seconds\r\nconst DEADLINE_FROM_NOW = 60 * 15\r\n\r\n// denominated in bips\r\nconst GAS_MARGIN = ethers.utils.bigNumberify(1000)\r\n\r\nconst BlueSpan = styled.span`\r\n  color: ${({ theme }) => theme.royalBlue};\r\n`\r\n\r\nconst LastSummaryText = styled.div`\r\n  margin-top: 1rem;\r\n`\r\n\r\nconst DownArrowBackground = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap}\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst DownArrow = styled.img`\r\n  width: 0.625rem;\r\n  height: 0.625rem;\r\n  position: relative;\r\n  padding: 0.875rem;\r\n  cursor: ${({ clickable }) => clickable && 'pointer'};\r\n`\r\n\r\nconst ExchangeRateWrapper = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap};\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.doveGray};\r\n  font-size: 0.75rem;\r\n  padding: 0.5rem 1rem;\r\n`\r\n\r\nconst ExchangeRate = styled.span`\r\n  flex: 1 1 auto;\r\n  width: 0;\r\n  color: ${({ theme }) => theme.chaliceGray};\r\n`\r\n\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 2rem;\r\n\r\n  button {\r\n    max-width: 20rem;\r\n  }\r\n`\r\n\r\nfunction calculateSlippageBounds(value, token = false) {\r\n  if (value) {\r\n    const offset = value.mul(token ? TOKEN_ALLOWED_SLIPPAGE : ALLOWED_SLIPPAGE).div(ethers.utils.bigNumberify(10000))\r\n    const minimum = value.sub(offset)\r\n    const maximum = value.add(offset)\r\n    return {\r\n      minimum: minimum.lt(ethers.constants.Zero) ? ethers.constants.Zero : minimum,\r\n      maximum: maximum.gt(ethers.constants.MaxUint256) ? ethers.constants.MaxUint256 : maximum\r\n    }\r\n  } else {\r\n    return {}\r\n  }\r\n}\r\n\r\nfunction getSwapType(inputCurrency, outputCurrency) {\r\n  if (!inputCurrency || !outputCurrency) {\r\n    return null\r\n  } else if (inputCurrency === 'ETH') {\r\n    return ETH_TO_TOKEN\r\n  } else if (outputCurrency === 'ETH') {\r\n    return TOKEN_TO_ETH\r\n  } else {\r\n    return TOKEN_TO_TOKEN\r\n  }\r\n}\r\n\r\n// this mocks the getInputPrice function, and calculates the required output\r\nfunction calculateEtherTokenOutputFromInput(inputAmount, inputReserve, outputReserve) {\r\n  const inputAmountWithFee = inputAmount.mul(ethers.utils.bigNumberify(997))\r\n  const numerator = inputAmountWithFee.mul(outputReserve)\r\n  const denominator = inputReserve.mul(ethers.utils.bigNumberify(1000)).add(inputAmountWithFee)\r\n  return numerator.div(denominator)\r\n}\r\n\r\n// this mocks the getOutputPrice function, and calculates the required input\r\nfunction calculateEtherTokenInputFromOutput(outputAmount, inputReserve, outputReserve) {\r\n  const numerator = inputReserve.mul(outputAmount).mul(ethers.utils.bigNumberify(1000))\r\n  const denominator = outputReserve.sub(outputAmount).mul(ethers.utils.bigNumberify(997))\r\n  return numerator.div(denominator).add(ethers.constants.One)\r\n}\r\n\r\nconst initialSwapState = {\r\n  independentValue: '', // this is a user input\r\n  dependentValue: '', // this is a calculated number\r\n  independentField: INPUT,\r\n  inputCurrency: 'ETH',\r\n  outputCurrency: '0x763Fa6806e1acf68130D2D0f0df754C93cC546B2'\r\n}\r\n\r\nfunction swapStateReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'FLIP_INDEPENDENT': {\r\n      const { independentField, inputCurrency, outputCurrency } = state\r\n      return {\r\n        ...state,\r\n        dependentValue: '',\r\n        independentField: independentField === INPUT ? OUTPUT : INPUT,\r\n        inputCurrency: outputCurrency,\r\n        outputCurrency: inputCurrency\r\n      }\r\n    }\r\n    case 'SELECT_CURRENCY': {\r\n      const { inputCurrency, outputCurrency } = state\r\n      const { field, currency } = action.payload\r\n\r\n      const newInputCurrency = field === INPUT ? currency : inputCurrency\r\n      const newOutputCurrency = field === OUTPUT ? currency : outputCurrency\r\n\r\n      if (newInputCurrency === newOutputCurrency) {\r\n        return {\r\n          ...state,\r\n          inputCurrency: field === INPUT ? currency : '',\r\n          outputCurrency: field === OUTPUT ? currency : ''\r\n        }\r\n      } else {\r\n        return {\r\n          ...state,\r\n          inputCurrency: newInputCurrency,\r\n          outputCurrency: newOutputCurrency\r\n        }\r\n      }\r\n    }\r\n    case 'UPDATE_INDEPENDENT': {\r\n      const { field, value } = action.payload\r\n      const { dependentValue, independentValue } = state\r\n      return {\r\n        ...state,\r\n        independentValue: value,\r\n        dependentValue: value === independentValue ? dependentValue : '',\r\n        independentField: field\r\n      }\r\n    }\r\n    case 'UPDATE_DEPENDENT': {\r\n      return {\r\n        ...state,\r\n        dependentValue: action.payload\r\n      }\r\n    }\r\n    default: {\r\n      return initialSwapState\r\n    }\r\n  }\r\n}\r\n\r\nfunction getExchangeRate(inputValue, inputDecimals, outputValue, outputDecimals, invert = false) {\r\n  try {\r\n    if (\r\n      inputValue &&\r\n      (inputDecimals || inputDecimals === 0) &&\r\n      outputValue &&\r\n      (outputDecimals || outputDecimals === 0)\r\n    ) {\r\n      const factor = ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))\r\n\r\n      if (invert) {\r\n        return inputValue\r\n          .mul(factor)\r\n          .div(outputValue)\r\n          .mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(outputDecimals)))\r\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(inputDecimals)))\r\n      } else {\r\n        return outputValue\r\n          .mul(factor)\r\n          .div(inputValue)\r\n          .mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(inputDecimals)))\r\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(outputDecimals)))\r\n      }\r\n    }\r\n  } catch {}\r\n}\r\n\r\nfunction getMarketRate(\r\n  swapType,\r\n  inputReserveETH,\r\n  inputReserveToken,\r\n  inputDecimals,\r\n  outputReserveETH,\r\n  outputReserveToken,\r\n  outputDecimals,\r\n  invert = false\r\n) {\r\n  if (swapType === ETH_TO_TOKEN) {\r\n    return getExchangeRate(outputReserveETH, 18, outputReserveToken, outputDecimals, invert)\r\n  } else if (swapType === TOKEN_TO_ETH) {\r\n    return getExchangeRate(inputReserveToken, inputDecimals, inputReserveETH, 18, invert)\r\n  } else if (swapType === TOKEN_TO_TOKEN) {\r\n    const factor = ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))\r\n    const firstRate = getExchangeRate(inputReserveToken, inputDecimals, inputReserveETH, 18)\r\n    const secondRate = getExchangeRate(outputReserveETH, 18, outputReserveToken, outputDecimals)\r\n    try {\r\n      return !!(firstRate && secondRate) ? firstRate.mul(secondRate).div(factor) : undefined\r\n    } catch {}\r\n  }\r\n}\r\n\r\nexport default function Swap() {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3Context()\r\n\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  // analytics\r\n  useEffect(() => {\r\n    ReactGA.pageview(window.location.pathname + window.location.search)\r\n  }, [])\r\n\r\n  // core swap state\r\n  const [swapState, dispatchSwapState] = useReducer(swapStateReducer, initialSwapState)\r\n  const { independentValue, dependentValue, independentField, inputCurrency, outputCurrency } = swapState\r\n\r\n  // get swap type from the currency types\r\n  const swapType = getSwapType(inputCurrency, outputCurrency)\r\n\r\n  // get decimals and exchange addressfor each of the currency types\r\n  const { symbol: inputSymbol, decimals: inputDecimals, exchangeAddress: inputExchangeAddress } = useTokenDetails(\r\n    inputCurrency\r\n  )\r\n  const { symbol: outputSymbol, decimals: outputDecimals, exchangeAddress: outputExchangeAddress } = useTokenDetails(\r\n    outputCurrency\r\n  )\r\n\r\n  const inputExchangeContract = useExchangeContract(inputExchangeAddress)\r\n  const outputExchangeContract = useExchangeContract(outputExchangeAddress)\r\n  const contract = swapType === ETH_TO_TOKEN ? outputExchangeContract : inputExchangeContract\r\n\r\n  // get input allowance\r\n  const inputAllowance = useAddressAllowance(account, inputCurrency, inputExchangeAddress)\r\n\r\n  // fetch reserves for each of the currency types\r\n  const { reserveETH: inputReserveETH, reserveToken: inputReserveToken } = useExchangeReserves(inputCurrency)\r\n  const { reserveETH: outputReserveETH, reserveToken: outputReserveToken } = useExchangeReserves(outputCurrency)\r\n\r\n  // get balances for each of the currency types\r\n  const inputBalance = useAddressBalance(account, inputCurrency)\r\n  const outputBalance = useAddressBalance(account, outputCurrency)\r\n  const inputBalanceFormatted = !!(inputBalance && Number.isInteger(inputDecimals))\r\n    ? amountFormatter(inputBalance, inputDecimals, Math.min(4, inputDecimals))\r\n    : ''\r\n  const outputBalanceFormatted = !!(outputBalance && Number.isInteger(outputDecimals))\r\n    ? amountFormatter(outputBalance, outputDecimals, Math.min(4, outputDecimals))\r\n    : ''\r\n\r\n  // compute useful transforms of the data above\r\n  const independentDecimals = independentField === INPUT ? inputDecimals : outputDecimals\r\n  const dependentDecimals = independentField === OUTPUT ? inputDecimals : outputDecimals\r\n\r\n  // declare/get parsed and formatted versions of input/output values\r\n  const [independentValueParsed, setIndependentValueParsed] = useState()\r\n  const dependentValueFormatted = !!(dependentValue && (dependentDecimals || dependentDecimals === 0))\r\n    ? amountFormatter(dependentValue, dependentDecimals, Math.min(4, dependentDecimals), false)\r\n    : ''\r\n  const inputValueParsed = independentField === INPUT ? independentValueParsed : dependentValue\r\n  const inputValueFormatted = independentField === INPUT ? independentValue : dependentValueFormatted\r\n  const outputValueParsed = independentField === OUTPUT ? independentValueParsed : dependentValue\r\n  const outputValueFormatted = independentField === OUTPUT ? independentValue : dependentValueFormatted\r\n\r\n  // validate + parse independent value\r\n  const [independentError, setIndependentError] = useState()\r\n  useEffect(() => {\r\n    if (independentValue && (independentDecimals || independentDecimals === 0)) {\r\n      try {\r\n        const parsedValue = ethers.utils.parseUnits(independentValue, independentDecimals)\r\n\r\n        if (parsedValue.lte(ethers.constants.Zero) || parsedValue.gte(ethers.constants.MaxUint256)) {\r\n          throw Error()\r\n        } else {\r\n          setIndependentValueParsed(parsedValue)\r\n          setIndependentError(null)\r\n        }\r\n      } catch {\r\n        setIndependentError(t('inputNotValid'))\r\n      }\r\n\r\n      return () => {\r\n        setIndependentValueParsed()\r\n        setIndependentError()\r\n      }\r\n    }\r\n  }, [independentValue, independentDecimals, t])\r\n\r\n  // calculate slippage from target rate\r\n  const { minimum: dependentValueMinumum, maximum: dependentValueMaximum } = calculateSlippageBounds(\r\n    dependentValue,\r\n    swapType === TOKEN_TO_TOKEN\r\n  )\r\n\r\n  // validate input allowance + balance\r\n  const [inputError, setInputError] = useState()\r\n  const [showUnlock, setShowUnlock] = useState(false)\r\n  useEffect(() => {\r\n    const inputValueCalculation = independentField === INPUT ? independentValueParsed : dependentValueMaximum\r\n    if (inputBalance && (inputAllowance || inputCurrency === 'ETH') && inputValueCalculation) {\r\n      if (inputBalance.lt(inputValueCalculation)) {\r\n        setInputError(t('insufficientBalance'))\r\n      } else if (inputCurrency !== 'ETH' && inputAllowance.lt(inputValueCalculation)) {\r\n        setInputError(t('unlockTokenCont'))\r\n        setShowUnlock(true)\r\n      } else {\r\n        setInputError(null)\r\n        setShowUnlock(false)\r\n      }\r\n\r\n      return () => {\r\n        setInputError()\r\n        setShowUnlock(false)\r\n      }\r\n    }\r\n  }, [independentField, independentValueParsed, dependentValueMaximum, inputBalance, inputCurrency, inputAllowance, t])\r\n\r\n  // calculate dependent value\r\n  useEffect(() => {\r\n    const amount = independentValueParsed\r\n\r\n    if (swapType === ETH_TO_TOKEN) {\r\n      const reserveETH = outputReserveETH\r\n      const reserveToken = outputReserveToken\r\n\r\n      if (amount && reserveETH && reserveToken) {\r\n        try {\r\n          const calculatedDependentValue =\r\n            independentField === INPUT\r\n              ? calculateEtherTokenOutputFromInput(amount, reserveETH, reserveToken)\r\n              : calculateEtherTokenInputFromOutput(amount, reserveETH, reserveToken)\r\n\r\n          if (calculatedDependentValue.lte(ethers.constants.Zero)) {\r\n            throw Error()\r\n          }\r\n\r\n          dispatchSwapState({ type: 'UPDATE_DEPENDENT', payload: calculatedDependentValue })\r\n        } catch {\r\n          setIndependentError(t('insufficientLiquidity'))\r\n        }\r\n        return () => {\r\n          dispatchSwapState({ type: 'UPDATE_DEPENDENT', payload: '' })\r\n        }\r\n      }\r\n    } else if (swapType === TOKEN_TO_ETH) {\r\n      const reserveETH = inputReserveETH\r\n      const reserveToken = inputReserveToken\r\n\r\n      if (amount && reserveETH && reserveToken) {\r\n        try {\r\n          const calculatedDependentValue =\r\n            independentField === INPUT\r\n              ? calculateEtherTokenOutputFromInput(amount, reserveToken, reserveETH)\r\n              : calculateEtherTokenInputFromOutput(amount, reserveToken, reserveETH)\r\n\r\n          if (calculatedDependentValue.lte(ethers.constants.Zero)) {\r\n            throw Error()\r\n          }\r\n\r\n          dispatchSwapState({ type: 'UPDATE_DEPENDENT', payload: calculatedDependentValue })\r\n        } catch {\r\n          setIndependentError(t('insufficientLiquidity'))\r\n        }\r\n        return () => {\r\n          dispatchSwapState({ type: 'UPDATE_DEPENDENT', payload: '' })\r\n        }\r\n      }\r\n    } else if (swapType === TOKEN_TO_TOKEN) {\r\n      const reserveETHFirst = inputReserveETH\r\n      const reserveTokenFirst = inputReserveToken\r\n\r\n      const reserveETHSecond = outputReserveETH\r\n      const reserveTokenSecond = outputReserveToken\r\n\r\n      if (amount && reserveETHFirst && reserveTokenFirst && reserveETHSecond && reserveTokenSecond) {\r\n        try {\r\n          if (independentField === INPUT) {\r\n            const intermediateValue = calculateEtherTokenOutputFromInput(amount, reserveTokenFirst, reserveETHFirst)\r\n            if (intermediateValue.lte(ethers.constants.Zero)) {\r\n              throw Error()\r\n            }\r\n            const calculatedDependentValue = calculateEtherTokenOutputFromInput(\r\n              intermediateValue,\r\n              reserveETHSecond,\r\n              reserveTokenSecond\r\n            )\r\n            if (calculatedDependentValue.lte(ethers.constants.Zero)) {\r\n              throw Error()\r\n            }\r\n            dispatchSwapState({ type: 'UPDATE_DEPENDENT', payload: calculatedDependentValue })\r\n          } else {\r\n            const intermediateValue = calculateEtherTokenInputFromOutput(amount, reserveETHSecond, reserveTokenSecond)\r\n            if (intermediateValue.lte(ethers.constants.Zero)) {\r\n              throw Error()\r\n            }\r\n            const calculatedDependentValue = calculateEtherTokenInputFromOutput(\r\n              intermediateValue,\r\n              reserveTokenFirst,\r\n              reserveETHFirst\r\n            )\r\n            if (calculatedDependentValue.lte(ethers.constants.Zero)) {\r\n              throw Error()\r\n            }\r\n            dispatchSwapState({ type: 'UPDATE_DEPENDENT', payload: calculatedDependentValue })\r\n          }\r\n        } catch {\r\n          setIndependentError(t('insufficientLiquidity'))\r\n        }\r\n        return () => {\r\n          dispatchSwapState({ type: 'UPDATE_DEPENDENT', payload: '' })\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    independentValueParsed,\r\n    swapType,\r\n    outputReserveETH,\r\n    outputReserveToken,\r\n    inputReserveETH,\r\n    inputReserveToken,\r\n    independentField,\r\n    t\r\n  ])\r\n\r\n  const [inverted, setInverted] = useState(false)\r\n  const exchangeRate = getExchangeRate(inputValueParsed, inputDecimals, outputValueParsed, outputDecimals)\r\n  const exchangeRateInverted = getExchangeRate(inputValueParsed, inputDecimals, outputValueParsed, outputDecimals, true)\r\n\r\n  const marketRate = getMarketRate(\r\n    swapType,\r\n    inputReserveETH,\r\n    inputReserveToken,\r\n    inputDecimals,\r\n    outputReserveETH,\r\n    outputReserveToken,\r\n    outputDecimals\r\n  )\r\n\r\n  const percentSlippage =\r\n    exchangeRate && marketRate\r\n      ? exchangeRate\r\n          .sub(marketRate)\r\n          .abs()\r\n          .mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\r\n          .div(marketRate)\r\n          .sub(ethers.utils.bigNumberify(3).mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(15))))\r\n      : undefined\r\n  const percentSlippageFormatted = percentSlippage && amountFormatter(percentSlippage, 16, 2)\r\n  const slippageWarning =\r\n    percentSlippage &&\r\n    percentSlippage.gte(ethers.utils.parseEther('.05')) &&\r\n    percentSlippage.lt(ethers.utils.parseEther('.2')) // [5% - 20%)\r\n  const highSlippageWarning = percentSlippage && percentSlippage.gte(ethers.utils.parseEther('.2')) // [20+%\r\n\r\n  const isValid = exchangeRate && inputError === null && independentError === null\r\n\r\n  const estimatedText = `(${t('estimated')})`\r\n  function formatBalance(value) {\r\n    return `Balance: ${value}`\r\n  }\r\n\r\n  function renderTransactionDetails() {\r\n    ReactGA.event({\r\n      category: 'TransactionDetail',\r\n      action: 'Open'\r\n    })\r\n\r\n    const b = text => <BlueSpan>{text}</BlueSpan>\r\n\r\n    if (independentField === INPUT) {\r\n      return (\r\n        <div>\r\n          <div>\r\n            {t('youAreSelling')}{' '}\r\n            {b(\r\n              `${amountFormatter(\r\n                independentValueParsed,\r\n                independentDecimals,\r\n                Math.min(4, independentDecimals)\r\n              )} ${inputSymbol}`\r\n            )}\r\n            .\r\n          </div>\r\n          <LastSummaryText>\r\n            {t('youWillReceive')}{' '}\r\n            {b(\r\n              `${amountFormatter(\r\n                dependentValueMinumum,\r\n                dependentDecimals,\r\n                Math.min(4, dependentDecimals)\r\n              )} ${outputSymbol}`\r\n            )}{' '}\r\n            {t('orTransFail')}\r\n          </LastSummaryText>\r\n          <LastSummaryText>\r\n            {(slippageWarning || highSlippageWarning) && (\r\n              <span role=\"img\" aria-label=\"warning\">\r\n                ⚠️\r\n              </span>\r\n            )}\r\n            {t('priceChange')} {b(`${percentSlippageFormatted}%`)}.\r\n          </LastSummaryText>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div>\r\n          <div>\r\n            {t('youAreBuying')}{' '}\r\n            {b(\r\n              `${amountFormatter(\r\n                independentValueParsed,\r\n                independentDecimals,\r\n                Math.min(4, independentDecimals)\r\n              )} ${outputSymbol}`\r\n            )}\r\n            .\r\n          </div>\r\n          <LastSummaryText>\r\n            {t('itWillCost')}{' '}\r\n            {b(\r\n              `${amountFormatter(\r\n                dependentValueMaximum,\r\n                dependentDecimals,\r\n                Math.min(4, dependentDecimals)\r\n              )} ${inputSymbol}`\r\n            )}{' '}\r\n            {t('orTransFail')}\r\n          </LastSummaryText>\r\n          <LastSummaryText>\r\n            {t('priceChange')} {b(`${percentSlippageFormatted}%`)}.\r\n          </LastSummaryText>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  function renderSummary() {\r\n    let contextualInfo = ''\r\n    let isError = false\r\n\r\n    if (inputError || independentError) {\r\n      contextualInfo = inputError || independentError\r\n      isError = true\r\n    } else if (!inputCurrency || !outputCurrency) {\r\n      contextualInfo = t('selectTokenCont')\r\n    } else if (!independentValue) {\r\n      contextualInfo = t('enterValueCont')\r\n    } else if (!account) {\r\n      contextualInfo = t('noWallet')\r\n      isError = true\r\n    }\r\n\r\n    const slippageWarningText = highSlippageWarning\r\n      ? t('highSlippageWarning')\r\n      : slippageWarning\r\n      ? t('slippageWarning')\r\n      : ''\r\n\r\n    return (\r\n      <NewContextualInfo\r\n        openDetailsText={t('transactionDetails')}\r\n        closeDetailsText={t('hideDetails')}\r\n        contextualInfo={contextualInfo ? contextualInfo : slippageWarningText}\r\n        allowExpand={!!(inputCurrency && outputCurrency && inputValueParsed && outputValueParsed)}\r\n        isError={isError}\r\n        slippageWarning={slippageWarning && !contextualInfo}\r\n        highSlippageWarning={highSlippageWarning && !contextualInfo}\r\n        renderTransactionDetails={renderTransactionDetails}\r\n      />\r\n    )\r\n  }\r\n\r\n  async function onSwap() {\r\n    const deadline = Math.ceil(Date.now() / 1000) + DEADLINE_FROM_NOW\r\n\r\n    let estimate, method, args, value\r\n    if (independentField === INPUT) {\r\n      ReactGA.event({\r\n        category: `${swapType}`,\r\n        action: 'SwapInput'\r\n      })\r\n\r\n      if (swapType === ETH_TO_TOKEN) {\r\n        estimate = contract.estimate.ethToTokenSwapInput\r\n        method = contract.ethToTokenSwapInput\r\n        args = [dependentValueMinumum, deadline]\r\n        value = independentValueParsed\r\n      } else if (swapType === TOKEN_TO_ETH) {\r\n        estimate = contract.estimate.tokenToEthSwapInput\r\n        method = contract.tokenToEthSwapInput\r\n        args = [independentValueParsed, dependentValueMinumum, deadline]\r\n        value = ethers.constants.Zero\r\n      } else if (swapType === TOKEN_TO_TOKEN) {\r\n        estimate = contract.estimate.tokenToTokenSwapInput\r\n        method = contract.tokenToTokenSwapInput\r\n        args = [independentValueParsed, dependentValueMinumum, ethers.constants.One, deadline, outputCurrency]\r\n        value = ethers.constants.Zero\r\n      }\r\n    } else if (independentField === OUTPUT) {\r\n      ReactGA.event({\r\n        category: `${swapType}`,\r\n        action: 'SwapOutput'\r\n      })\r\n\r\n      if (swapType === ETH_TO_TOKEN) {\r\n        estimate = contract.estimate.ethToTokenSwapOutput\r\n        method = contract.ethToTokenSwapOutput\r\n        args = [independentValueParsed, deadline]\r\n        value = dependentValueMaximum\r\n      } else if (swapType === TOKEN_TO_ETH) {\r\n        estimate = contract.estimate.tokenToEthSwapOutput\r\n        method = contract.tokenToEthSwapOutput\r\n        args = [independentValueParsed, dependentValueMaximum, deadline]\r\n        value = ethers.constants.Zero\r\n      } else if (swapType === TOKEN_TO_TOKEN) {\r\n        estimate = contract.estimate.tokenToTokenSwapOutput\r\n        method = contract.tokenToTokenSwapOutput\r\n        args = [independentValueParsed, dependentValueMaximum, ethers.constants.MaxUint256, deadline, outputCurrency]\r\n        value = ethers.constants.Zero\r\n      }\r\n    }\r\n\r\n    const estimatedGasLimit = await estimate(...args, { value })\r\n    method(...args, { value, gasLimit: calculateGasMargin(estimatedGasLimit, GAS_MARGIN) }).then(response => {\r\n      addTransaction(response)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CurrencyInputPanel\r\n        title={t('input')}\r\n        description={inputValueFormatted && independentField === OUTPUT ? estimatedText : ''}\r\n        extraText={inputBalanceFormatted && formatBalance(inputBalanceFormatted)}\r\n        extraTextClickHander={() => {\r\n          if (inputBalance && inputDecimals) {\r\n            const valueToSet = inputCurrency === 'ETH' ? inputBalance.sub(ethers.utils.parseEther('.1')) : inputBalance\r\n            if (valueToSet.gt(ethers.constants.Zero)) {\r\n              dispatchSwapState({\r\n                type: 'UPDATE_INDEPENDENT',\r\n                payload: { value: amountFormatter(valueToSet, inputDecimals, inputDecimals, false), field: INPUT }\r\n              })\r\n            }\r\n          }\r\n        }}\r\n        onCurrencySelected={inputCurrency => {\r\n          dispatchSwapState({ type: 'SELECT_CURRENCY', payload: { currency: inputCurrency, field: INPUT } })\r\n        }}\r\n        onValueChange={inputValue => {\r\n          dispatchSwapState({ type: 'UPDATE_INDEPENDENT', payload: { value: inputValue, field: INPUT } })\r\n        }}\r\n        showUnlock={showUnlock}\r\n        selectedTokens={[inputCurrency, outputCurrency]}\r\n        selectedTokenAddress={inputCurrency}\r\n        value={inputValueFormatted}\r\n        errorMessage={inputError ? inputError : independentField === INPUT ? independentError : ''}\r\n      />\r\n      <OversizedPanel>\r\n        <DownArrowBackground>\r\n          <DownArrow\r\n            onClick={() => {\r\n              dispatchSwapState({ type: 'FLIP_INDEPENDENT' })\r\n            }}\r\n            clickable\r\n            alt=\"swap\"\r\n            src={isValid ? ArrowDownBlue : ArrowDownGrey}\r\n          />\r\n        </DownArrowBackground>\r\n      </OversizedPanel>\r\n      <CurrencyInputPanel\r\n        title={t('output')}\r\n        description={outputValueFormatted && independentField === INPUT ? estimatedText : ''}\r\n        extraText={outputBalanceFormatted && formatBalance(outputBalanceFormatted)}\r\n        onCurrencySelected={outputCurrency => {\r\n          dispatchSwapState({ type: 'SELECT_CURRENCY', payload: { currency: outputCurrency, field: OUTPUT } })\r\n        }}\r\n        onValueChange={outputValue => {\r\n          dispatchSwapState({ type: 'UPDATE_INDEPENDENT', payload: { value: outputValue, field: OUTPUT } })\r\n        }}\r\n        selectedTokens={[inputCurrency, outputCurrency]}\r\n        selectedTokenAddress={outputCurrency}\r\n        value={outputValueFormatted}\r\n        errorMessage={independentField === OUTPUT ? independentError : ''}\r\n        disableUnlock\r\n      />\r\n      <OversizedPanel hideBottom>\r\n        <ExchangeRateWrapper\r\n          onClick={() => {\r\n            setInverted(inverted => !inverted)\r\n          }}\r\n        >\r\n          <ExchangeRate>{t('exchangeRate')}</ExchangeRate>\r\n          {inverted ? (\r\n            <span>\r\n              {exchangeRate\r\n                ? `1 ${outputSymbol} = ${amountFormatter(exchangeRateInverted, 18, 4, false)} ${inputSymbol}`\r\n                : ' - '}\r\n            </span>\r\n          ) : (\r\n            <span>\r\n              {exchangeRate\r\n                ? `1 ${inputSymbol} = ${amountFormatter(exchangeRate, 18, 4, false)} ${outputSymbol}`\r\n                : ' - '}\r\n            </span>\r\n          )}\r\n        </ExchangeRateWrapper>\r\n      </OversizedPanel>\r\n      {renderSummary()}\r\n      <Flex>\r\n        <Button disabled={!isValid} onClick={onSwap} warning={highSlippageWarning}>\r\n          {highSlippageWarning ? t('swapAnyway') : t('swap')}\r\n        </Button>\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n"],"sourceRoot":""}