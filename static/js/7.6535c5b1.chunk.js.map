{"version":3,"sources":["components/ContextualInfo/index.js","assets/images/dropup-blue.svg","assets/images/plus-blue.svg","assets/images/plus-grey.svg","pages/Pool/AddLiquidity.js"],"names":["SummaryWrapper","styled","div","_templateObject","_ref","error","theme","salmonRed","doveGray","Details","_templateObject2","_ref2","concreteGray","SummaryWrapperContainer","_templateObject3","_ref3","flexRowNoWrap","_ref4","royalBlue","ContextualInfo","state","showDetails","this","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","props","renderTransactionDetails","_this2","_this$props","openDetailsText","closeDetailsText","contextualInfo","isError","Fragment","onClick","setState","prevState","src","DropupBlue","alt","DropdownBlue","renderDetails","Component","defaultProps","module","exports","__webpack_require__","p","INPUT","OUTPUT","ALLOWED_SLIPPAGE","ethers","utils","bigNumberify","DEADLINE_FROM_NOW","GAS_MARGIN","BlueSpan","span","NewExchangeWarning","NewExchangeWarningText","LastSummaryText","_templateObject4","DownArrowBackground","_templateObject5","DownArrow","img","_templateObject6","SummaryPanel","_templateObject7","flexColumnNoWrap","ExchangeRateWrapper","_templateObject8","_ref5","ExchangeRate","_templateObject9","_ref6","chaliceGray","Flex","_templateObject10","calculateSlippageBounds","value","offset","mul","minimum","sub","maximum","add","lt","constants","Zero","gt","MaxUint256","initialAddLiquidityState","inputValue","outputValue","lastEditedField","outputCurrency","addLiquidityStateReducer","action","type","Object","_mnt_c_Code_uniswap_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_3__","payload","_action$payload","field","_action$payload2","getMarketRate","reserveETH","reserveToken","decimals","inputDecimals","outputDecimals","invert","arguments","length","undefined","factor","pow","_unused","getExchangeRate","AddLiquidity","t","useTranslation","_useWeb3Context","useWeb3Context","library","active","account","_useReducer","useReducer","_useReducer2","_mnt_c_Code_uniswap_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","addLiquidityState","dispatchAddLiquidityState","inputCurrency","_useState","useState","_useState2","inputValueParsed","setInputValueParsed","_useState3","_useState4","outputValueParsed","setOutputValueParsed","_useState5","_useState6","inputError","setInputError","_useState7","_useState8","outputError","setOutputError","_useTokenDetails","useTokenDetails","symbol","exchangeAddress","exchangeContract","useExchangeContract","_useState9","_useState10","totalPoolTokens","setTotalPoolTokens","fetchPoolTokens","useCallback","totalSupply","then","useEffect","on","removeListener","poolTokenBalance","useAddressBalance","exchangeETHBalance","exchangeTokenBalance","_useExchangeReserves","useExchangeReserves","isNewExchange","isZero","poolTokenPercentage","ethShare","tokenShare","liquidityMinted","inputBalance","outputBalance","ethPerLiquidityToken","tokenPerLiquidityToken","outputValueMax","liquidityTokensMin","marketRate","useMemo","marketRateInverted","ReactGA","event","category","b","text","react__WEBPACK_IMPORTED_MODULE_5___default","concat","amountFormatter","Math","min","addTransaction","useTransactionAdder","isActive","isValid","_onAddLiquidity","_mnt_c_Code_uniswap_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_mnt_c_Code_uniswap_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","deadline","estimatedGasLimit","wrap","_context","prev","next","ceil","Date","now","estimate","addLiquidity","sent","gasLimit","calculateGasMargin","response","stop","apply","formatBalance","parsedInputValue","parseUnits","parsedOutputValue","parsedValue","lte","gte","Error","currencyAmount","_unused2","_unused3","allowance","useAddressAllowance","_useState11","_useState12","showUnlock","setShowUnlock","role","aria-label","_components_CurrencyInputPanel__WEBPACK_IMPORTED_MODULE_12__","title","extraText","onValueChange","selectedTokenAddress","errorMessage","disableTokenSelect","_components_OversizedPanel__WEBPACK_IMPORTED_MODULE_13__","PlusBlue","PlusGrey","description","onCurrencySelected","hideBottom","_components_ContextualInfo__WEBPACK_IMPORTED_MODULE_14__","renderSummary","_theme__WEBPACK_IMPORTED_MODULE_11__","disabled"],"mappings":"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","file":"static/js/7.6535c5b1.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\n\r\nimport DropdownBlue from '../../assets/images/dropdown-blue.svg'\r\nimport DropupBlue from '../../assets/images/dropup-blue.svg'\r\n\r\nconst SummaryWrapper = styled.div`\r\n  color: ${({ error, theme }) => (error ? theme.salmonRed : theme.doveGray)};\r\n  font-size: 0.75rem;\r\n  text-align: center;\r\n  margin-top: 1rem;\r\n  padding-top: 1rem;\r\n`\r\n\r\nconst Details = styled.div`\r\n  background-color: ${({ theme }) => theme.concreteGray};\r\n  padding: 1.5rem;\r\n  border-radius: 1rem;\r\n  font-size: 0.75rem;\r\n  margin-top: 1rem;\r\n`\r\n\r\nconst SummaryWrapperContainer = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap};\r\n  color: ${({ theme }) => theme.royalBlue};\r\n  text-align: center;\r\n  margin-top: 1rem;\r\n  padding-top: 1rem;\r\n  cursor: pointer;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 0.75rem;\r\n\r\n  span {\r\n    margin-right: 12px;\r\n  }\r\n\r\n  img {\r\n    height: 0.75rem;\r\n    width: 0.75rem;\r\n  }\r\n`\r\n\r\nclass ContextualInfo extends Component {\r\n  static propTypes = {\r\n    openDetailsText: PropTypes.string,\r\n    renderTransactionDetails: PropTypes.func,\r\n    contextualInfo: PropTypes.string,\r\n    isError: PropTypes.bool\r\n  }\r\n\r\n  static defaultProps = {\r\n    openDetailsText: 'Transaction Details',\r\n    closeDetailsText: 'Hide Details',\r\n    renderTransactionDetails() {},\r\n    contextualInfo: '',\r\n    isError: false\r\n  }\r\n\r\n  state = {\r\n    showDetails: false\r\n  }\r\n\r\n  renderDetails() {\r\n    if (!this.state.showDetails) {\r\n      return null\r\n    }\r\n\r\n    return <Details>{this.props.renderTransactionDetails()}</Details>\r\n  }\r\n\r\n  render() {\r\n    const { openDetailsText, closeDetailsText, contextualInfo, isError } = this.props\r\n\r\n    if (contextualInfo) {\r\n      return <SummaryWrapper error={isError}>{contextualInfo}</SummaryWrapper>\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <SummaryWrapperContainer\r\n          onClick={() =>\r\n            this.setState(prevState => {\r\n              return { showDetails: !prevState.showDetails }\r\n            })\r\n          }\r\n        >\r\n          {!this.state.showDetails ? (\r\n            <>\r\n              <span>{openDetailsText}</span>\r\n              <img src={DropdownBlue} alt=\"dropdown\" />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <span>{closeDetailsText}</span>\r\n              <img src={DropupBlue} alt=\"dropup\" />\r\n            </>\r\n          )}\r\n        </SummaryWrapperContainer>\r\n        {this.renderDetails()}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ContextualInfo\r\n","module.exports = __webpack_public_path__ + \"static/media/dropup-blue.345dad74.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus-blue.899a4aa9.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus-grey.62281ca8.svg\";","import React, { useReducer, useState, useCallback, useEffect, useMemo } from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { useWeb3Context } from 'web3-react'\r\nimport { ethers } from 'ethers'\r\nimport ReactGA from 'react-ga'\r\nimport styled from 'styled-components'\r\n\r\nimport { Button } from '../../theme'\r\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\r\nimport OversizedPanel from '../../components/OversizedPanel'\r\nimport ContextualInfo from '../../components/ContextualInfo'\r\nimport PlusBlue from '../../assets/images/plus-blue.svg'\r\nimport PlusGrey from '../../assets/images/plus-grey.svg'\r\nimport { useExchangeContract } from '../../hooks'\r\nimport { amountFormatter, calculateGasMargin } from '../../utils'\r\nimport { useTransactionAdder } from '../../contexts/Transactions'\r\nimport { useTokenDetails } from '../../contexts/Tokens'\r\nimport { useAddressBalance, useExchangeReserves } from '../../contexts/Balances'\r\nimport { useAddressAllowance } from '../../contexts/Allowances'\r\n\r\nconst INPUT = 0\r\nconst OUTPUT = 1\r\n\r\n// denominated in bips\r\nconst ALLOWED_SLIPPAGE = ethers.utils.bigNumberify(200)\r\n\r\n// denominated in seconds\r\nconst DEADLINE_FROM_NOW = 60 * 15\r\n\r\n// denominated in bips\r\nconst GAS_MARGIN = ethers.utils.bigNumberify(1000)\r\n\r\nconst BlueSpan = styled.span`\r\n  color: ${({ theme }) => theme.royalBlue};\r\n`\r\n\r\nconst NewExchangeWarning = styled.div`\r\n  margin-top: 1rem;\r\n  padding: 1rem;\r\n  margin-bottom: 2rem;\r\n  border: 1px solid rgba($pizazz-orange, 0.4);\r\n  background-color: rgba($pizazz-orange, 0.1);\r\n  border-radius: 1rem;\r\n`\r\n\r\nconst NewExchangeWarningText = styled.div`\r\n  font-size: 0.75rem;\r\n  line-height: 1rem;\r\n  text-align: center;\r\n\r\n  :first-child {\r\n    padding-bottom: 0.3rem;\r\n    font-weight: 500;\r\n  }\r\n`\r\n\r\nconst LastSummaryText = styled.div`\r\n  margin-top: 1rem;\r\n`\r\n\r\nconst DownArrowBackground = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap}\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst DownArrow = styled.img`\r\n  width: 0.625rem;\r\n  height: 0.625rem;\r\n  position: relative;\r\n  padding: 0.875rem;\r\n`\r\n\r\nconst SummaryPanel = styled.div`\r\n  ${({ theme }) => theme.flexColumnNoWrap}\r\n  padding: 1rem 0;\r\n`\r\n\r\nconst ExchangeRateWrapper = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap};\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.doveGray};\r\n  font-size: 0.75rem;\r\n  padding: 0.25rem 1rem 0;\r\n`\r\n\r\nconst ExchangeRate = styled.span`\r\n  flex: 1 1 auto;\r\n  width: 0;\r\n  color: ${({ theme }) => theme.chaliceGray};\r\n`\r\n\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 2rem;\r\n\r\n  button {\r\n    max-width: 20rem;\r\n  }\r\n`\r\n\r\nfunction calculateSlippageBounds(value) {\r\n  if (value) {\r\n    const offset = value.mul(ALLOWED_SLIPPAGE).div(ethers.utils.bigNumberify(10000))\r\n    const minimum = value.sub(offset)\r\n    const maximum = value.add(offset)\r\n    return {\r\n      minimum: minimum.lt(ethers.constants.Zero) ? ethers.constants.Zero : minimum,\r\n      maximum: maximum.gt(ethers.constants.MaxUint256) ? ethers.constants.MaxUint256 : maximum\r\n    }\r\n  } else {\r\n    return {}\r\n  }\r\n}\r\n\r\nconst initialAddLiquidityState = {\r\n  inputValue: '',\r\n  outputValue: '',\r\n  lastEditedField: INPUT,\r\n  outputCurrency: '0x763Fa6806e1acf68130D2D0f0df754C93cC546B2'\r\n}\r\n\r\nfunction addLiquidityStateReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'SELECT_CURRENCY': {\r\n      return {\r\n        ...state,\r\n        outputCurrency: action.payload\r\n      }\r\n    }\r\n    case 'UPDATE_VALUE': {\r\n      const { inputValue, outputValue } = state\r\n      const { field, value } = action.payload\r\n      return {\r\n        ...state,\r\n        inputValue: field === INPUT ? value : inputValue,\r\n        outputValue: field === OUTPUT ? value : outputValue,\r\n        lastEditedField: field\r\n      }\r\n    }\r\n    case 'UPDATE_DEPENDENT_VALUE': {\r\n      const { inputValue, outputValue } = state\r\n      const { field, value } = action.payload\r\n      return {\r\n        ...state,\r\n        inputValue: field === INPUT ? value : inputValue,\r\n        outputValue: field === OUTPUT ? value : outputValue\r\n      }\r\n    }\r\n    default: {\r\n      return initialAddLiquidityState\r\n    }\r\n  }\r\n}\r\n\r\nfunction getExchangeRate(inputValue, inputDecimals, outputValue, outputDecimals, invert = false) {\r\n  try {\r\n    if (\r\n      inputValue &&\r\n      (inputDecimals || inputDecimals === 0) &&\r\n      outputValue &&\r\n      (outputDecimals || outputDecimals === 0)\r\n    ) {\r\n      const factor = ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))\r\n\r\n      if (invert) {\r\n        return inputValue\r\n          .mul(factor)\r\n          .div(outputValue)\r\n          .mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(outputDecimals)))\r\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(inputDecimals)))\r\n      } else {\r\n        return outputValue\r\n          .mul(factor)\r\n          .div(inputValue)\r\n          .mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(inputDecimals)))\r\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(outputDecimals)))\r\n      }\r\n    }\r\n  } catch {}\r\n}\r\n\r\nfunction getMarketRate(reserveETH, reserveToken, decimals, invert = false) {\r\n  return getExchangeRate(reserveETH, 18, reserveToken, decimals, invert)\r\n}\r\n\r\nexport default function AddLiquidity() {\r\n  const { t } = useTranslation()\r\n  const { library, active, account } = useWeb3Context()\r\n\r\n  const [addLiquidityState, dispatchAddLiquidityState] = useReducer(addLiquidityStateReducer, initialAddLiquidityState)\r\n  const { inputValue, outputValue, lastEditedField, outputCurrency } = addLiquidityState\r\n  const inputCurrency = 'ETH'\r\n\r\n  const [inputValueParsed, setInputValueParsed] = useState()\r\n  const [outputValueParsed, setOutputValueParsed] = useState()\r\n  const [inputError, setInputError] = useState()\r\n  const [outputError, setOutputError] = useState()\r\n\r\n  const { symbol, decimals, exchangeAddress } = useTokenDetails(outputCurrency)\r\n  const exchangeContract = useExchangeContract(exchangeAddress)\r\n\r\n  const [totalPoolTokens, setTotalPoolTokens] = useState()\r\n  const fetchPoolTokens = useCallback(() => {\r\n    if (exchangeContract) {\r\n      exchangeContract.totalSupply().then(totalSupply => {\r\n        setTotalPoolTokens(totalSupply)\r\n      })\r\n    }\r\n  }, [exchangeContract])\r\n  useEffect(() => {\r\n    fetchPoolTokens()\r\n    library.on('block', fetchPoolTokens)\r\n\r\n    return () => {\r\n      library.removeListener('block', fetchPoolTokens)\r\n    }\r\n  }, [fetchPoolTokens, library])\r\n\r\n  const poolTokenBalance = useAddressBalance(account, exchangeAddress)\r\n  const exchangeETHBalance = useAddressBalance(exchangeAddress, 'ETH')\r\n  const exchangeTokenBalance = useAddressBalance(exchangeAddress, outputCurrency)\r\n\r\n  const { reserveETH, reserveToken } = useExchangeReserves(outputCurrency)\r\n  const isNewExchange = !!(reserveETH && reserveToken && reserveETH.isZero() && reserveToken.isZero())\r\n\r\n  // 18 decimals\r\n  const poolTokenPercentage =\r\n    poolTokenBalance && totalPoolTokens && isNewExchange === false && !totalPoolTokens.isZero()\r\n      ? poolTokenBalance.mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))).div(totalPoolTokens)\r\n      : undefined\r\n  const ethShare =\r\n    exchangeETHBalance && poolTokenPercentage\r\n      ? exchangeETHBalance\r\n          .mul(poolTokenPercentage)\r\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\r\n      : undefined\r\n  const tokenShare =\r\n    exchangeTokenBalance && poolTokenPercentage\r\n      ? exchangeTokenBalance\r\n          .mul(poolTokenPercentage)\r\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\r\n      : undefined\r\n\r\n  const liquidityMinted = isNewExchange\r\n    ? inputValueParsed\r\n    : totalPoolTokens && inputValueParsed && exchangeETHBalance && !exchangeETHBalance.isZero()\r\n    ? totalPoolTokens.mul(inputValueParsed).div(exchangeETHBalance)\r\n    : undefined\r\n\r\n  // user balances\r\n  const inputBalance = useAddressBalance(account, inputCurrency)\r\n  const outputBalance = useAddressBalance(account, outputCurrency)\r\n\r\n  const ethPerLiquidityToken =\r\n    exchangeETHBalance && totalPoolTokens && isNewExchange === false && !totalPoolTokens.isZero()\r\n      ? exchangeETHBalance.mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))).div(totalPoolTokens)\r\n      : undefined\r\n  const tokenPerLiquidityToken =\r\n    exchangeTokenBalance && totalPoolTokens && isNewExchange === false && !totalPoolTokens.isZero()\r\n      ? exchangeTokenBalance.mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))).div(totalPoolTokens)\r\n      : undefined\r\n\r\n  const outputValueMax = outputValueParsed && calculateSlippageBounds(outputValueParsed).maximum\r\n  const liquidityTokensMin = liquidityMinted && calculateSlippageBounds(liquidityMinted).minimum\r\n\r\n  const marketRate = useMemo(() => {\r\n    return getMarketRate(reserveETH, reserveToken, decimals)\r\n  }, [reserveETH, reserveToken, decimals])\r\n  const marketRateInverted = useMemo(() => {\r\n    return getMarketRate(reserveETH, reserveToken, decimals, true)\r\n  }, [reserveETH, reserveToken, decimals])\r\n\r\n  function renderTransactionDetails() {\r\n    ReactGA.event({\r\n      category: 'TransactionDetail',\r\n      action: 'Open'\r\n    })\r\n\r\n    const b = text => <BlueSpan>{text}</BlueSpan>\r\n\r\n    if (isNewExchange) {\r\n      return (\r\n        <div>\r\n          <div>\r\n            {t('youAreAdding')} {b(`${inputValue} ETH`)} {t('and')} {b(`${outputValue} ${symbol}`)} {t('intoPool')}\r\n          </div>\r\n          <LastSummaryText>\r\n            {t('youAreSettingExRate')}{' '}\r\n            {b(\r\n              `1 ETH = ${amountFormatter(\r\n                getMarketRate(inputValueParsed, outputValueParsed, decimals),\r\n                18,\r\n                4,\r\n                false\r\n              )} ${symbol}`\r\n            )}\r\n            .\r\n          </LastSummaryText>\r\n          <LastSummaryText>\r\n            {t('youWillMint')} {b(`${inputValue}`)} {t('liquidityTokens')}\r\n          </LastSummaryText>\r\n          <LastSummaryText>{t('totalSupplyIs0')}</LastSummaryText>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <>\r\n          <div>\r\n            {t('youAreAdding')} {b(`${amountFormatter(inputValueParsed, 18, 4)} ETH`)} {t('and')} {'at most'}{' '}\r\n            {b(`${amountFormatter(outputValueMax, decimals, 4)} ${symbol}`)} {t('intoPool')}\r\n          </div>\r\n          <LastSummaryText>\r\n            {t('youWillMint')} {b(amountFormatter(liquidityMinted, 18, 4))} {t('liquidityTokens')}\r\n          </LastSummaryText>\r\n          <LastSummaryText>\r\n            {t('totalSupplyIs')} {b(amountFormatter(totalPoolTokens, 18, 4))}\r\n          </LastSummaryText>\r\n          <LastSummaryText>\r\n            {t('tokenWorth')} {b(amountFormatter(ethPerLiquidityToken, 18, 4))} ETH {t('and')}{' '}\r\n            {b(amountFormatter(tokenPerLiquidityToken, decimals, Math.min(decimals, 4)))} {symbol}\r\n          </LastSummaryText>\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  function renderSummary() {\r\n    let contextualInfo = ''\r\n    let isError = false\r\n\r\n    if (inputError || outputError) {\r\n      contextualInfo = inputError || outputError\r\n      isError = true\r\n    } else if (!inputCurrency || !outputCurrency) {\r\n      contextualInfo = t('selectTokenCont')\r\n    } else if (!inputValue) {\r\n      contextualInfo = t('enterValueCont')\r\n    } else if (!account) {\r\n      contextualInfo = t('noWallet')\r\n      isError = true\r\n    }\r\n\r\n    return (\r\n      <ContextualInfo\r\n        openDetailsText={t('transactionDetails')}\r\n        closeDetailsText={t('hideDetails')}\r\n        contextualInfo={contextualInfo}\r\n        isError={isError}\r\n        renderTransactionDetails={renderTransactionDetails}\r\n      />\r\n    )\r\n  }\r\n\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  const isActive = active && account\r\n  const isValid = inputError === null || outputError === null\r\n\r\n  async function onAddLiquidity() {\r\n    ReactGA.event({\r\n      category: 'Pool',\r\n      action: 'AddLiquidity'\r\n    })\r\n\r\n    const deadline = Math.ceil(Date.now() / 1000) + DEADLINE_FROM_NOW\r\n    const estimatedGasLimit = await exchangeContract.estimate.addLiquidity(\r\n      isNewExchange ? ethers.constants.Zero : liquidityTokensMin,\r\n      isNewExchange ? outputValueParsed : outputValueMax,\r\n      deadline,\r\n      {\r\n        value: inputValueParsed\r\n      }\r\n    )\r\n\r\n    exchangeContract\r\n      .addLiquidity(\r\n        isNewExchange ? ethers.constants.Zero : liquidityTokensMin,\r\n        isNewExchange ? outputValueParsed : outputValueMax,\r\n        deadline,\r\n        {\r\n          value: inputValueParsed,\r\n          gasLimit: calculateGasMargin(estimatedGasLimit, GAS_MARGIN)\r\n        }\r\n      )\r\n      .then(response => {\r\n        addTransaction(response)\r\n      })\r\n  }\r\n\r\n  function formatBalance(value) {\r\n    return `Balance: ${value}`\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isNewExchange) {\r\n      if (inputValue) {\r\n        const parsedInputValue = ethers.utils.parseUnits(inputValue, 18)\r\n        setInputValueParsed(parsedInputValue)\r\n      }\r\n\r\n      if (outputValue) {\r\n        const parsedOutputValue = ethers.utils.parseUnits(outputValue, decimals)\r\n        setOutputValueParsed(parsedOutputValue)\r\n      }\r\n    }\r\n  }, [decimals, inputValue, isNewExchange, outputValue])\r\n\r\n  // parse input value\r\n  useEffect(() => {\r\n    if (isNewExchange === false && inputValue && marketRate && lastEditedField === INPUT && decimals) {\r\n      try {\r\n        const parsedValue = ethers.utils.parseUnits(inputValue, 18)\r\n\r\n        if (parsedValue.lte(ethers.constants.Zero) || parsedValue.gte(ethers.constants.MaxUint256)) {\r\n          throw Error()\r\n        }\r\n\r\n        setInputValueParsed(parsedValue)\r\n\r\n        const currencyAmount = marketRate\r\n          .mul(parsedValue)\r\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\r\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18 - decimals)))\r\n\r\n        setOutputValueParsed(currencyAmount)\r\n        dispatchAddLiquidityState({\r\n          type: 'UPDATE_DEPENDENT_VALUE',\r\n          payload: { field: OUTPUT, value: amountFormatter(currencyAmount, decimals, 4, false) }\r\n        })\r\n\r\n        return () => {\r\n          setOutputError()\r\n          setInputValueParsed()\r\n          setOutputValueParsed()\r\n          dispatchAddLiquidityState({\r\n            type: 'UPDATE_DEPENDENT_VALUE',\r\n            payload: { field: OUTPUT, value: '' }\r\n          })\r\n        }\r\n      } catch {\r\n        setOutputError(t('inputNotValid'))\r\n      }\r\n    }\r\n  }, [inputValue, isNewExchange, lastEditedField, marketRate, decimals, t])\r\n\r\n  // parse output value\r\n  useEffect(() => {\r\n    if (isNewExchange === false && outputValue && marketRateInverted && lastEditedField === OUTPUT && decimals) {\r\n      try {\r\n        const parsedValue = ethers.utils.parseUnits(outputValue, decimals)\r\n\r\n        if (parsedValue.lte(ethers.constants.Zero) || parsedValue.gte(ethers.constants.MaxUint256)) {\r\n          throw Error()\r\n        }\r\n\r\n        setOutputValueParsed(parsedValue)\r\n\r\n        const currencyAmount = marketRateInverted\r\n          .mul(parsedValue)\r\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(decimals)))\r\n\r\n        setInputValueParsed(currencyAmount)\r\n        dispatchAddLiquidityState({\r\n          type: 'UPDATE_DEPENDENT_VALUE',\r\n          payload: { field: INPUT, value: amountFormatter(currencyAmount, 18, 4, false) }\r\n        })\r\n\r\n        return () => {\r\n          setInputError()\r\n          setOutputValueParsed()\r\n          setInputValueParsed()\r\n          dispatchAddLiquidityState({\r\n            type: 'UPDATE_DEPENDENT_VALUE',\r\n            payload: { field: INPUT, value: '' }\r\n          })\r\n        }\r\n      } catch {\r\n        setInputError(t('inputNotValid'))\r\n      }\r\n    }\r\n  }, [outputValue, isNewExchange, lastEditedField, marketRateInverted, decimals, t])\r\n\r\n  // input validation\r\n  useEffect(() => {\r\n    if (inputValueParsed && inputBalance) {\r\n      if (inputValueParsed.gt(inputBalance)) {\r\n        setInputError(t('insufficientBalance'))\r\n      } else {\r\n        setInputError(null)\r\n      }\r\n    }\r\n\r\n    if (outputValueMax && outputBalance) {\r\n      if (outputValueMax.gt(outputBalance)) {\r\n        setOutputError(t('insufficientBalance'))\r\n      } else {\r\n        setOutputError(null)\r\n      }\r\n    }\r\n  }, [inputValueParsed, inputBalance, outputValueMax, outputBalance, t])\r\n\r\n  const allowance = useAddressAllowance(account, outputCurrency, exchangeAddress)\r\n  const [showUnlock, setShowUnlock] = useState(false)\r\n  useEffect(() => {\r\n    if (outputValueParsed && allowance) {\r\n      if (allowance.lt(outputValueParsed)) {\r\n        setOutputError(t('unlockTokenCont'))\r\n        setShowUnlock(true)\r\n      }\r\n      return () => {\r\n        setOutputError()\r\n        setShowUnlock(false)\r\n      }\r\n    }\r\n  }, [outputValueParsed, allowance, t])\r\n\r\n  return (\r\n    <>\r\n      {isNewExchange ? (\r\n        <NewExchangeWarning>\r\n          <NewExchangeWarningText>\r\n            <span role=\"img\" aria-label=\"first-liquidity\">\r\n              🚰\r\n            </span>{' '}\r\n            {t('firstLiquidity')}\r\n          </NewExchangeWarningText>\r\n          <NewExchangeWarningText>{t('initialExchangeRate', { symbol })}</NewExchangeWarningText>\r\n        </NewExchangeWarning>\r\n      ) : null}\r\n\r\n      <CurrencyInputPanel\r\n        title={t('deposit')}\r\n        extraText={inputBalance && formatBalance(amountFormatter(inputBalance, 18, 4))}\r\n        onValueChange={inputValue => {\r\n          dispatchAddLiquidityState({ type: 'UPDATE_VALUE', payload: { value: inputValue, field: INPUT } })\r\n        }}\r\n        selectedTokenAddress=\"ETH\"\r\n        value={inputValue}\r\n        errorMessage={inputError}\r\n        disableTokenSelect\r\n      />\r\n      <OversizedPanel>\r\n        <DownArrowBackground>\r\n          <DownArrow src={isActive ? PlusBlue : PlusGrey} alt=\"plus\" />\r\n        </DownArrowBackground>\r\n      </OversizedPanel>\r\n      <CurrencyInputPanel\r\n        title={t('deposit')}\r\n        description={isNewExchange ? '' : outputValue ? `(${t('estimated')})` : ''}\r\n        extraText={outputBalance && formatBalance(amountFormatter(outputBalance, decimals, Math.min(decimals, 4)))}\r\n        selectedTokenAddress={outputCurrency}\r\n        onCurrencySelected={outputCurrency => {\r\n          dispatchAddLiquidityState({ type: 'SELECT_CURRENCY', payload: outputCurrency })\r\n        }}\r\n        onValueChange={outputValue => {\r\n          dispatchAddLiquidityState({ type: 'UPDATE_VALUE', payload: { value: outputValue, field: OUTPUT } })\r\n        }}\r\n        value={outputValue}\r\n        showUnlock={showUnlock}\r\n        errorMessage={outputError}\r\n      />\r\n      <OversizedPanel hideBottom>\r\n        <SummaryPanel>\r\n          <ExchangeRateWrapper>\r\n            <ExchangeRate>{t('exchangeRate')}</ExchangeRate>\r\n            <span>{marketRate ? `1 ETH = ${amountFormatter(marketRate, 18, 4)} ${symbol}` : ' - '}</span>\r\n          </ExchangeRateWrapper>\r\n          <ExchangeRateWrapper>\r\n            <ExchangeRate>{t('currentPoolSize')}</ExchangeRate>\r\n            <span>\r\n              {exchangeETHBalance && exchangeTokenBalance\r\n                ? `${amountFormatter(exchangeETHBalance, 18, 4)} ETH + ${amountFormatter(\r\n                    exchangeTokenBalance,\r\n                    decimals,\r\n                    Math.min(4, decimals)\r\n                  )} ${symbol}`\r\n                : ' - '}\r\n            </span>\r\n          </ExchangeRateWrapper>\r\n          <ExchangeRateWrapper>\r\n            <ExchangeRate>\r\n              {t('yourPoolShare')} ({exchangeETHBalance && amountFormatter(poolTokenPercentage, 16, 2)}%)\r\n            </ExchangeRate>\r\n            <span>\r\n              {ethShare && tokenShare\r\n                ? `${amountFormatter(ethShare, 18, 4)} ETH + ${amountFormatter(\r\n                    tokenShare,\r\n                    decimals,\r\n                    Math.min(4, decimals)\r\n                  )} ${symbol}`\r\n                : ' - '}\r\n            </span>\r\n          </ExchangeRateWrapper>\r\n        </SummaryPanel>\r\n      </OversizedPanel>\r\n      {renderSummary()}\r\n      <Flex>\r\n        <Button disabled={!isValid} onClick={onAddLiquidity}>\r\n          {t('addLiquidity')}\r\n        </Button>\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n"],"sourceRoot":""}