{"version":3,"sources":["components/OversizedPanel/index.js","assets/images/dropdown-blue.svg","pages/Pool/ModeSelector.js","pages/Pool/index.js"],"names":["Panel","styled","div","_templateObject","_ref","theme","concreteGray","PanelTop","_templateObject2","_ref2","PanelBottom","_templateObject3","_ref3","OversizedPanel","_ref4","hideTop","hideBottom","children","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","module","exports","__webpack_require__","p","poolTabOrder","path","textKey","regex","LiquidityContainer","flexRowNoWrap","royalBlue","LiquidityLabel","span","StyledNavLink","NavLink","attrs","activeClassName","doveGray","_ref5","white","_ref6","mercuryGray","_ref7","PoolModal","_templateObject4","_ref8","withRouter","_ref9","pathname","location","history","t","useTranslation","_useState","useState","_useState2","Object","slicedToArray","modalIsOpen","setModalIsOpen","activeTabKey","findIndex","_ref10","match","navigate","useCallback","direction","tabIndex","_ref11","push","length","navigateRight","navigateLeft","useBodyKeyDown","react_default","onClick","src","Dropdown","alt","Modal","isOpen","onDismiss","minHeight","map","_ref12","key","to","isActive","_","_ref13","d","__webpack_exports__","Pool","AddLiquidity","lazy","Promise","all","e","then","bind","RemoveLiquidity","CreateExchange","useEffect","ReactGA","pageview","window","search","Fragment","Pool_ModeSelector","react","fallback","react_router","exact","strict","component","render","state","tokenAddress","params"],"mappings":"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","file":"static/js/8.3a75fad1.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Panel = styled.div`\r\n  position: relative;\r\n  background-color: ${({ theme }) => theme.concreteGray};\r\n  width: calc(100% - 1rem);\r\n  margin: 0 auto;\r\n  border-radius: 0.625rem;\r\n`\r\n\r\nconst PanelTop = styled.div`\r\n  content: '';\r\n  position: absolute;\r\n  top: -0.5rem;\r\n  left: 0;\r\n  height: 1rem;\r\n  width: 100%;\r\n  background-color: ${({ theme }) => theme.concreteGray};\r\n`\r\n\r\nconst PanelBottom = styled.div`\r\n  position: absolute;\r\n  top: 80%;\r\n  left: 0;\r\n  height: 1rem;\r\n  width: 100%;\r\n  background-color: ${({ theme }) => theme.concreteGray};\r\n`\r\n\r\nexport default function OversizedPanel({ hideTop, hideBottom, children }) {\r\n  return (\r\n    <Panel>\r\n      {hideTop || <PanelTop />}\r\n      {children}\r\n      {hideBottom || <PanelBottom />}\r\n    </Panel>\r\n  )\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/dropdown-blue.80a3ae25.svg\";","import React, { useState, useCallback } from 'react'\r\nimport { withRouter, NavLink } from 'react-router-dom'\r\nimport { useTranslation } from 'react-i18next'\r\nimport styled from 'styled-components'\r\n\r\nimport OversizedPanel from '../../components/OversizedPanel'\r\nimport Dropdown from '../../assets/images/dropdown-blue.svg'\r\nimport Modal from '../../components/Modal'\r\nimport { useBodyKeyDown } from '../../hooks'\r\n\r\nconst poolTabOrder = [\r\n  {\r\n    path: '/add-liquidity',\r\n    textKey: 'addLiquidity',\r\n    regex: /\\/add-liquidity/\r\n  },\r\n  {\r\n    path: '/remove-liquidity',\r\n    textKey: 'removeLiquidity',\r\n    regex: /\\/remove-liquidity/\r\n  },\r\n  {\r\n    path: '/create-exchange',\r\n    textKey: 'createExchange',\r\n    regex: /\\/create-exchange.*/\r\n  }\r\n]\r\n\r\nconst LiquidityContainer = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap};\r\n  align-items: center;\r\n  font-size: 0.75rem;\r\n  padding: 0.625rem 1rem;\r\n  font-size: 0.75rem;\r\n  color: ${({ theme }) => theme.royalBlue};\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n\r\n  img {\r\n    height: 0.75rem;\r\n    width: 0.75rem;\r\n  }\r\n`\r\n\r\nconst LiquidityLabel = styled.span`\r\n  flex: 1 0 auto;\r\n`\r\n\r\nconst activeClassName = 'MODE'\r\n\r\nconst StyledNavLink = styled(NavLink).attrs({\r\n  activeClassName\r\n})`\r\n  ${({ theme }) => theme.flexRowNoWrap}\r\n  padding: 1rem;\r\n  margin-left: 1rem;\r\n  margin-right: 1rem;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  color: ${({ theme }) => theme.doveGray};\r\n  font-size: 1rem;\r\n\r\n  &.${activeClassName} {\r\n    background-color: ${({ theme }) => theme.white};\r\n    border-radius: 3rem;\r\n    box-shadow: 0 0 0.5px 0.5px ${({ theme }) => theme.mercuryGray};\r\n    font-weight: 500;\r\n    color: ${({ theme }) => theme.royalBlue};\r\n  }\r\n`\r\n\r\nconst PoolModal = styled.div`\r\n  background-color: ${({ theme }) => theme.white};\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 2rem 0 2rem 0;\r\n`\r\n\r\nfunction ModeSelector({ location: { pathname }, history }) {\r\n  const { t } = useTranslation()\r\n\r\n  const [modalIsOpen, setModalIsOpen] = useState(false)\r\n\r\n  const activeTabKey = poolTabOrder[poolTabOrder.findIndex(({ regex }) => pathname.match(regex))].textKey\r\n\r\n  const navigate = useCallback(\r\n    direction => {\r\n      const tabIndex = poolTabOrder.findIndex(({ regex }) => pathname.match(regex))\r\n      history.push(poolTabOrder[(tabIndex + poolTabOrder.length + direction) % poolTabOrder.length].path)\r\n    },\r\n    [pathname, history]\r\n  )\r\n  const navigateRight = useCallback(() => {\r\n    navigate(1)\r\n  }, [navigate])\r\n  const navigateLeft = useCallback(() => {\r\n    navigate(-1)\r\n  }, [navigate])\r\n\r\n  useBodyKeyDown('ArrowDown', navigateRight, modalIsOpen)\r\n  useBodyKeyDown('ArrowUp', navigateLeft, modalIsOpen)\r\n\r\n  return (\r\n    <OversizedPanel hideTop>\r\n      <LiquidityContainer\r\n        onClick={() => {\r\n          setModalIsOpen(true)\r\n        }}\r\n      >\r\n        <LiquidityLabel>{t(activeTabKey)}</LiquidityLabel>\r\n        <img src={Dropdown} alt=\"dropdown\" />\r\n      </LiquidityContainer>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onDismiss={() => {\r\n          setModalIsOpen(false)\r\n        }}\r\n        minHeight={null}\r\n      >\r\n        <PoolModal>\r\n          {poolTabOrder.map(({ path, textKey, regex }) => (\r\n            <StyledNavLink\r\n              key={path}\r\n              to={path}\r\n              isActive={(_, { pathname }) => pathname.match(regex)}\r\n              onClick={() => {\r\n                setModalIsOpen(false)\r\n              }}\r\n            >\r\n              {t(textKey)}\r\n            </StyledNavLink>\r\n          ))}\r\n        </PoolModal>\r\n      </Modal>\r\n    </OversizedPanel>\r\n  )\r\n}\r\n\r\nexport default withRouter(ModeSelector)\r\n","import React, { Suspense, lazy, useEffect } from 'react'\r\nimport ReactGA from 'react-ga'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\n\r\nimport ModeSelector from './ModeSelector'\r\n\r\nconst AddLiquidity = lazy(() => import('./AddLiquidity'))\r\nconst RemoveLiquidity = lazy(() => import('./RemoveLiquidity'))\r\nconst CreateExchange = lazy(() => import('./CreateExchange'))\r\n\r\nexport default function Pool() {\r\n  useEffect(() => {\r\n    ReactGA.pageview(window.location.pathname + window.location.search)\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <ModeSelector />\r\n      {/* this Suspense is for route code-splitting */}\r\n      <Suspense fallback={null}>\r\n        <Switch>\r\n          <Route exact strict path=\"/add-liquidity\" component={AddLiquidity} />\r\n          <Route exact strict path=\"/remove-liquidity\" component={RemoveLiquidity} />\r\n          <Route exact strict path=\"/create-exchange\" component={CreateExchange} />\r\n          <Route\r\n            path=\"/create-exchange/:tokenAddress\"\r\n            render={({ match }) => {\r\n              return (\r\n                <Redirect to={{ pathname: '/create-exchange', state: { tokenAddress: match.params.tokenAddress } }} />\r\n              )\r\n            }}\r\n          />\r\n          <Redirect to=\"/add-liquidity\" />\r\n        </Switch>\r\n      </Suspense>\r\n    </>\r\n  )\r\n}\r\n"],"sourceRoot":""}